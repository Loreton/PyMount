version: 1
# disable_existing_loggers: true
disable_existing_loggers: false

ln_data:
    max_caller_len: 0
    milliseconds: false  # per il package coloredlogs



formatters:
    # keys: color


    colorlog:
        datefmt: "%H:%M:%S"
        class: colorlog.ColoredFormatter
        # (): 'ColoredFormatterLN' # da capire il secondary_colors https://github.com/borntyping/python-colorlog
        # format: '%(log_color)s%(asctime)s - %(name)-11s - %(levelname)-8s - %(message)-60s - formatter=colorlog.ColoredFormatter'
        # format: "%(log_color)s%(asctime)s%(cyan)s %(white)s[%(ln_caller)s] %(blue)s%(levelname)-4s:%(log_color)s %(message)s"
        format: "%(log_color)s[%(asctime)s %(blue)s%(levelname)-4s] %(white)s[%(ln_caller)s]:%(log_color)s %(message)s"
        # format: "%(blue)s[%(asctime)s %(levelname)-4s] %(white)s[%(ln_caller)s]:%(log_color)s %(message)s"

    console:
        # datefmt: %m-%d %H:%M:%S
        datefmt: "%H:%M:%S"
        format: "[%(asctime)s %(levelname)-4s] [%(funcName)s:%(lineno)4s]: %(message)s"



    file:
        datefmt: "%Y-%m-%d %H:%M:%S"
        # format: "%(asctime)s - %(module)s.%(funcName)s:%(lineno)s %(message)s"
        # format: "%(asctime)s - %(name)s - %(levelname)s - %(message)s"
        format: "[%(asctime)s %(levelname)-8s %(ln_caller)s]: %(message)s"

    standard:
        datefmt: "%Y-%m-%d %H:%M:%S"
        format: "%(asctime)s %(levelname)-8s %(module)s.%(funcName)s:%(lineno)s %(message)s"

    error:
        format: "%(asctime)s %(levelname)s <PID %(process)d:%(processName)s> %(module)s.%(funcName)s(): %(message)s"

handlers:
    console:
        class: logging.StreamHandler
        level: CRITICAL  # --log-console as cli parameter to set levle.DEBUG
        # formatter: console
        formatter: colorlog
        stream: ext://sys.stdout

    # unique_file_handler:
    #     class: logging.handlers.RotatingFileHandler
    #     level: DEBUG
    #     formatter: file
    #     filename: /tmp/prj.log # may be overridden by program
    #     maxBytes: 3000000 # 3MB
    #     backupCount: 10
    #     encoding: utf8

    debug_file_handler: # si port dietro tutti gli altri
        class: logging.handlers.RotatingFileHandler
        level: DEBUG
        formatter: standard
        filename: /tmp/debug.log # may be overridden by program
        maxBytes: 10485760 # 10MB
        backupCount: 10
        encoding: utf8

    # info_file_handler:
    #     class: logging.handlers.RotatingFileHandler
    #     level: INFO
    #     formatter: standard
    #     filename: /tmp/info.log # may be overridden by program
    #     maxBytes: 10485760 # 10MB
    #     backupCount: 10
    #     encoding: utf8

    warning_file_handler: # si port dietro anche ERRROR e CRITICAL
        class: logging.handlers.RotatingFileHandler
        level: WARN
        formatter: standard
        filename: /tmp/warn.log # may be overridden by program
        maxBytes: 10485760 # 10MB
        backupCount: 10
        encoding: utf8

    # error_file_handler:
    #     class: logging.handlers.RotatingFileHandler
    #     level: ERROR
    #     # formatter: error
    #     formatter: standard
    #     filename: /tmp/errors.log # may be overridden by program
    #     maxBytes: 10485760 # 10MB
    #     backupCount: 20
    #     encoding: utf8


    # critical_file_handler:
    #     class: logging.handlers.RotatingFileHandler
    #     level: CRITICAL
    #     formatter: standard
    #     filename: /tmp/critical.log # may be overridden by program
    #     maxBytes: 10485760 # 10MB
    #     backupCount: 10
    #     encoding: utf8





root:
    # level: DEBUG
    level: NOTSET
    # handlers: [console]
    # handlers: [console, unique_file_handler, error_file_handler]
    # handlers: [console, unique_file_handler]
    # handlers: [console, unique_file_handler, warning_file_handler, error_file_handler]
    handlers: [console, debug_file_handler, warning_file_handler]
    propogate: yes



# nome a cui il logger si aggancia nel comando: logger=logging.getLogger(logger_name)
loggers:

    pyMount:
        level: DEBUG
        # handlers: [console, info_file_handler, error_file_handler, critical_file_handler, debug_file_handler, warn_file_handler]
        # handlers: [console, unique_file_handler, warning_file_handler, error_file_handler]
        handlers: [console, debug_file_handler, warning_file_handler]
        propogate: no



    # __main__:
    #     level: INFO
    #     # handlers: [console, unique_file_handler, info_file_handler, error_file_handler, critical_file_handler, debug_file_handler, warning_file_handler]
    #     handlers: [console]
    #     propogate: no
